//
//	gameobjectmanager
//	DCPP_COMPONENTS
//
//	Created by Jorge L├│pez Gonz├ílez on 22/07/2018 21:40:02.
//

#pragma once

#include "components/gameobject.h"

namespace dc
{
	// ===========================================================
	// External Enums / Typedefs for global usage
	// ===========================================================
	/**
	 * \class CGameObjectMgr
	 * \brief
	 * \author Jorge L├│pez Gonz├ílez
	 *
	 * Description.
	 */
class CGameObjectMgr
{
	// ===========================================================
	// Constant / Enums / Typedefs internal usage
	// ===========================================================
	
	// ===========================================================
	// Static fields / methods
	// ===========================================================

	// ===========================================================
	// Inner and Anonymous Classes
	// ===========================================================

	// ===========================================================
	// Getter & Setter
	// ===========================================================
public:
	const bool Exists(const CGameObject* gameObject) const;

	// ===========================================================
	// Constructors
	// ===========================================================
public:
	CGameObjectMgr()
	{}

	~CGameObjectMgr();
	// ===========================================================
	// Methods for/from SuperClass/Interfaces
	// ===========================================================

	// ===========================================================
	// Methods
	// ===========================================================

	// ===========================================================
	// Fields
	// ===========================================================

private:
	TGOList				m_goList;
	TGOList				m_newGOList;
	TGOList				m_oldGOList;
};

	// ===========================================================
	// Class typedefs
	// ===========================================================
	
	// ===========================================================
	// Template/Inline implementation
	// ===========================================================
}